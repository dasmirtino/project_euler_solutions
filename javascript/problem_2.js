const { test, get_answer } = require("./utils.js");

// PROBLEM 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//                          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

/**
 *
 * @param {number[]} array
 * @returns {number} sum of the even-valued terms of the array until the given index.
 */
function calc_even_sum(array) {
  let sum = 0;
  for (let i = 0; i < array.length; i++) {
    sum += array[i] % 2 == 0 ? array[i] : 0;
  }
  return sum;
}

/**
 * 
 * @param {number} max_val max value of the finacci term.
 * @returns calculates fibonacci terms until the last
 * term calculated is less than max_val.
 */
function iterate_until(max_val) {
  let curr_val = 0,
    fib = [1, 2],
    n_term = 2;
  while (curr_val < max_val) {
    curr_val = fib[n_term - 1] + fib[n_term - 2];
    fib.push(curr_val);
    n_term++;
  }
  return calc_even_sum(fib);
}

test();
get_answer(iterate_until(4000000));
